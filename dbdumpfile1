--
-- PostgreSQL database dump
--

-- Dumped from database version 16.1
-- Dumped by pg_dump version 16.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: check_comment_id(); Type: FUNCTION; Schema: public; Owner: my_user
--

CREATE FUNCTION public.check_comment_id() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF EXISTS (SELECT 1 FROM armor WHERE id = NEW.item_id) THEN
        RETURN NEW;
    END IF;
    IF EXISTS (SELECT 1 FROM weapon WHERE id = NEW.item_id) THEN
        RETURN NEW;
    END IF;
    IF EXISTS (SELECT 1 FROM sword WHERE id = NEW.item_id) THEN
        RETURN NEW;
    END IF;
    IF EXISTS (SELECT 1 FROM spear WHERE id = NEW.item_id) THEN
        RETURN NEW;
    END IF;
    IF EXISTS (SELECT 1 FROM incantation WHERE id = NEW.item_id) THEN
        RETURN NEW;
    END IF;
    IF EXISTS (SELECT 1 FROM sorcery WHERE id = NEW.item_id) THEN
        RETURN NEW;
    END IF;
    IF EXISTS (SELECT 1 FROM staff WHERE id = NEW.item_id) THEN
        RETURN NEW;
    END IF;
    IF EXISTS (SELECT 1 FROM hammer WHERE id = NEW.item_id) THEN
        RETURN NEW;
    END IF;
    -- If item_id does not exist in tables, raise an exception
    RAISE EXCEPTION 'The item_id does not exist in armor or weapon tables.';
END;
$$;


ALTER FUNCTION public.check_comment_id() OWNER TO my_user;

--
-- Name: validate_weapon_id(); Type: FUNCTION; Schema: public; Owner: my_user
--

CREATE FUNCTION public.validate_weapon_id() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM weapon WHERE id = NEW.weapon_id) THEN
        IF EXISTS (SELECT 1 FROM sword WHERE id = NEW.weapon_id) THEN
            RETURN NEW;
        ELSE
            RAISE EXCEPTION 'Invalid weapon ID';
        END IF;
    ELSE
        RETURN NEW;
    END IF;
END;
$$;


ALTER FUNCTION public.validate_weapon_id() OWNER TO my_user;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: armor; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.armor (
    id character varying(200) NOT NULL,
    description character varying(200),
    requirement_id integer
);


ALTER TABLE public.armor OWNER TO my_user;

--
-- Name: boss; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.boss (
    id character varying(200) NOT NULL,
    location_id character varying(200),
    weapon_id character varying(200),
    armor_id character varying(200),
    race_id character varying(50),
    sword_id character varying(200),
    hammer_id character varying(200),
    staff_id character varying(200),
    spear_id character varying(200),
    image bytea
);


ALTER TABLE public.boss OWNER TO my_user;

--
-- Name: character; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public."character" (
    id character varying(200) NOT NULL,
    race_id character varying(50),
    weapon_id character varying(200),
    armor_id character varying(200),
    sword_id character varying(200),
    spear_id character varying(200),
    hammer_id character varying(200),
    staff_id character varying(200)
);


ALTER TABLE public."character" OWNER TO my_user;

--
-- Name: comments; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.comments (
    id integer NOT NULL,
    item_id character varying(200),
    comment character varying(500)
);


ALTER TABLE public.comments OWNER TO my_user;

--
-- Name: comments_id_seq; Type: SEQUENCE; Schema: public; Owner: my_user
--

ALTER TABLE public.comments ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: granter; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.granter (
    id character varying(200) NOT NULL,
    description character varying(500)
);


ALTER TABLE public.granter OWNER TO my_user;

--
-- Name: weapon; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.weapon (
    id character varying(200) NOT NULL,
    requirement_id integer,
    image bytea
);


ALTER TABLE public.weapon OWNER TO my_user;

--
-- Name: hammer; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.hammer (
    bonk_damage integer
)
INHERITS (public.weapon);


ALTER TABLE public.hammer OWNER TO my_user;

--
-- Name: spell; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.spell (
    id character varying(200) NOT NULL,
    description character varying(200),
    requirement_id integer,
    image bytea
);


ALTER TABLE public.spell OWNER TO my_user;

--
-- Name: incantation; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.incantation (
    granter_id character varying(200)
)
INHERITS (public.spell);


ALTER TABLE public.incantation OWNER TO my_user;

--
-- Name: location; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.location (
    id character varying(200) NOT NULL,
    description character varying(200)
);


ALTER TABLE public.location OWNER TO my_user;

--
-- Name: magic; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.magic (
    id character varying(200) NOT NULL,
    description character varying(500)
);


ALTER TABLE public.magic OWNER TO my_user;

--
-- Name: race; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.race (
    id character varying(50) NOT NULL,
    description character varying(200),
    starting_vigor integer,
    starting_mind integer,
    starting_arcane integer,
    starting_intelligence integer,
    starting_strength integer,
    starting_endurance integer,
    starting_dexterity integer,
    starting_faith integer
);


ALTER TABLE public.race OWNER TO my_user;

--
-- Name: requirement; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.requirement (
    id integer NOT NULL,
    vigor integer,
    mind integer,
    arcane integer,
    intelligence integer,
    strength integer,
    endurance integer,
    dexterity integer,
    faith integer
);


ALTER TABLE public.requirement OWNER TO my_user;

--
-- Name: requirement_id_seq; Type: SEQUENCE; Schema: public; Owner: my_user
--

ALTER TABLE public.requirement ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.requirement_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: sorcery; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.sorcery (
    magic_id character varying(200)
)
INHERITS (public.spell);


ALTER TABLE public.sorcery OWNER TO my_user;

--
-- Name: spear; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.spear (
    heavy_thrust_damage integer
)
INHERITS (public.weapon);


ALTER TABLE public.spear OWNER TO my_user;

--
-- Name: staff; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.staff (
    magic_damage integer
)
INHERITS (public.weapon);


ALTER TABLE public.staff OWNER TO my_user;

--
-- Name: sword; Type: TABLE; Schema: public; Owner: my_user
--

CREATE TABLE public.sword (
    slash_damage integer,
    thrust_damage integer
)
INHERITS (public.weapon);


ALTER TABLE public.sword OWNER TO my_user;

--
-- Data for Name: armor; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.armor (id, description, requirement_id) FROM stdin;
ALBERICH'S SET	Set with red glintstones, said to be formed by the blood of sacrifices. Strengthens thorn sorcery.	1
ALBINAURIC SET	Worn by young Albinaurics	1
ALL-KNOWING SET	Armor set with countless eyes and ears. Worn by Gideon Ofnir, the All-Knowing.	1
AZUR'S GLINTSTONE SET	Worn by the Primeval Sorcer Azur.	1
ASTROLOGER SET	Worn by those who look to the cosmos above. They read fate in the stars, and are said to be heirs of the glintstone sorcerers.	1
BANISHED KNIGHT SET	This armor was worn by knights who, whether by misfortune or misdeed, were forced to abandon their homes.	1
BLACK KNIFE SET	Scale armor forged by the Black Knife Assassins.	1
BLAIDD'S SET	Well-worn black armor of the man-wolf Blaidd	1
BULL-GOAT SET	Set, adorned with a gold bull-goat motif. Provide high poise.	1
BRIAR SET	Set worn by Elemer of the Briar.	1
CLEANROT SET	Armor Set of the Cleanrot Knights, celebrated for their undefeated campaign in the Shattering.	1
CONFESSOR SET	Black Set for blending in with the darkness. Worn by church confessors.	1
CRUCIBLE TREE SET	Armor of the Crucible Knights who served Godfrey, the first Elden Lord.	1
CRUCIBLE AXE SET	Armor of one of sixteen ancient knights who served Godfrey, the first Elden Lord	1
FIA'S SET	Worn by Fia, the Deathbed champion, on her journey after being exiled from her home.	1
FIRE PRELATE SET	Attire of the Fire Prelates, commanders of the Fire Monks.	1
GENERAL RADAHN SET	Armor Set depicting the golden lion. Worn by General Radahn.	1
GODSKIN APOSTLE SET	Set made by sewing together patches of smooth skin. Worn by the Godskin Apostles.	1
HOSLOW'S SET	Garish silver Armor Set decorated with red embellishments. Passed down through the Hoslow family	1
NIGHT'S CAVALRY SET	Worn by the Night's Cavalry who ride funeral steeds.	1
MALFORMED DRAGON SET	Malformed golden armor Set.	1
LUSAT'S SET	Worn by Sorcerer Lusat.	1
NOX SWORDSTRESS SET	Worn by swordstresses of the Eternal City.	1
OMENKILLER SET	Worn by the Omenkillers.	1
RONIN'S SET	Armor of the man once known as Yura	1
ROTTEN DUELIST SET	Worn by gladiators who were driven from the colosseum.	1
ROYAL REMAINS SET	Armor graced with gold human bones. Worn by the unspeaking adherent of Sir Gideon the All-Knowing.	1
TWINNED SET	Armor Set depicting entwined twins of gold and silver.	1
WHITE REED SET	Worn by the Inabam head disciples of the great swordsman Okina.	1
NO ARMOR	null	1
QUEEN OF THE FULL MOON SET	Worn by Rennala, Queen of the Full Moon.	1
ROYAL KNIGHT SET	Worn by Loretta, a knight who served Miquella's Haligtree.	1
ELDEN LORD SET	Armor Set of Godfrey, the first Elden Lord.	1
MALENIA'S SET	Armor made of unalloyed gold. Worn by Malenia, Blade of Miquella.	1
ZAMOR SET	Armor worn by knights of Zamor, hailed as heroes in the War against the Giants.	1
\.


--
-- Data for Name: boss; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.boss (id, location_id, weapon_id, armor_id, race_id, sword_id, hammer_id, staff_id, spear_id, image) FROM stdin;
Royal Knight Loretta	Caria Manor	\N	ROYAL KNIGHT SET	Warrior	\N	\N	\N	Loretta's War Sickle	\N
Godfrey, First Elden Lord	Leyndell	\N	ELDEN LORD SET	Hero	\N	Axe of Godfrey	\N	\N	\N
Elemer of the Briar	The Shaded Castle	\N	BRIAR SET	Prisoner	Marais Executioner's Sword	\N	\N	\N	\N
Rykard, Lord of Blasphemy	Volcano Manor	\N	NO ARMOR	Monster	Blasphemous Blade	\N	\N	\N	\N
Loretta, Knight of the Haligtree	Miquella's Haligtree	\N	ROYAL KNIGHT SET	Warrior	\N	\N	\N	Loretta's War Sickle	\N
Malenia, Blade of Miquella	Miquella's Haligtree	\N	MALENIA'S SET	Wretch	Hand of Malenia	\N	\N	\N	\N
Mohg, Lord of Blood	Mohgwyn Dynasty Mausoleum	\N	NO ARMOR	Prophet	\N	\N	\N	Mohgwyn's Sacred Spear	\N
Radagon of the Golden Order	Leyndell Ashen Capital	\N	GENERAL RADAHN SET	Hero	\N	Marika's Hammer	\N	\N	\N
Black Knife Assassin	Altus Plateau	\N	BLACK KNIFE SET	Confessor	Black Knife	\N	\N	\N	\N
Ancient Hero of Zamor	Zamor Ruins	\N	ZAMOR SET	Warrior	Zamor Curved Sword	\N	\N	\N	\N
Crystalian	Ainsel River	\N	NO ARMOR	Monster	\N	\N	\N	Rotten Crystal Spear	\N
Crucible Knight Ordovis	Leyndell	\N	CRUCIBLE AXE SET	Warrior	Ordovis's Greatsword	\N	\N	\N	\N
Starscourge Radahn	Redmane Castle	\N	NO ARMOR	Hero	Starscourge Greatsword	\N	\N	\N	\N
Battlemage Hugues	Caelid	\N	ALBERICH'S SET	Astrologer	\N	\N	Carian Glintstone Staff	\N	\N
Magma Wyrm	Altus Plateau	\N	NO ARMOR	Monster	Magma Wyrm's Scalesword	\N	\N	\N	\N
Onyx Lord	Limgrave	\N	NO ARMOR	Monster	Onyx Lord's Greatsword	\N	\N	\N	\N
Morgott, the Omen King	Leyndell	\N	NO ARMOR	Omen	Morgott's Cursed Sword	\N	\N	\N	\N
Crucible Knight Siluria	Deeproot Depths	\N	CRUCIBLE TREE SET	Warrior	\N	\N	\N	Siluria's Tree	\N
Banished Knight	Liurnia of the Lakes	\N	BANISHED KNIGHT SET	Prisoner	Banished Knight's Greatsword	\N	\N	\N	\N
Rotten Duelist	Consecrated Snowfield	\N	ROTTEN DUELIST SET	Prisoner	\N	Rotten Battle Hammer	\N	\N	\N
Godrick the Grafted	Stormveil Castle	\N	NO ARMOR	Warrior	\N	Axe of Godrick	\N	\N	\N
Margit the Fell Omen	Stormveil Castle	Baton	NO ARMOR	Omen	\N	\N	\N	\N	\N
Red Wolf of Radagon	Raya Lucaria Academy	no weapon	NO ARMOR	Monster	\N	\N	\N	\N	\N
Regal Ancestor Spirit	Hallowhorn Grounds	no weapon	NO ARMOR	Monster	\N	\N	\N	\N	\N
Borealis the Freezing Fog	Consecrated Snowfield	no weapon	NO ARMOR	Monster	\N	\N	\N	\N	\N
Astel, Stars of Darkness	Deeproot Depths	no weapon	NO ARMOR	Monster	\N	\N	\N	\N	\N
Erdtree Avatar	Limgrave	\N	NO ARMOR	Monster	\N	Staff of the Avatar	\N	\N	\N
Rennala, Queen of the Full Moon	Raya Lucaria Academy	\N	QUEEN OF THE FULL MOON SET	Astrologer	\N	\N	Carian Regal Scepter	\N	\N
\.


--
-- Data for Name: character; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public."character" (id, race_id, weapon_id, armor_id, sword_id, spear_id, hammer_id, staff_id) FROM stdin;
Sir Gideon Ofnir	Warrior	\N	ALL-KNOWING SET	\N	\N	Scepter of the All-Knowing	\N
Fia	Prophet	no weapon	FIA'S SET	\N	\N	\N	\N
Primeval Sorcerer Azur	Astrologer	\N	AZUR'S GLINTSTONE SET	\N	\N	\N	Azur's Glintstone Staff
Primeval Sorcerer Lusat	Astrologer	\N	LUSAT'S SET	\N	\N	\N	Lusat's Glintstone Staff
Yura	Samurai	\N	RONIN'S SET	Nagakiba	\N	\N	\N
confessor_type	Confessor	\N	CONFESSOR SET	Uchigatana	\N	\N	\N
Vyke	Hero	\N	ROYAL KNIGHT SET	\N	Vyke's War Spear	\N	\N
assassin_type	Wretch	\N	BLACK KNIFE SET	Black Knife	\N	\N	\N
warrior_type	Warrior	\N	CRUCIBLE AXE SET	\N	\N	Nightrider Flail	\N
mage_type	Wretch	\N	ALBERICH'S SET	\N	\N	\N	Prince of Death's Staff
\.


--
-- Data for Name: comments; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.comments (id, item_id, comment) FROM stdin;
33	Dragonclaw	test1
35	Dragonclaw	test2
36	Dragonice	aaaaaaaa
37	Dragonice	aaaaaaaaaaas
38	Dragonclaw	dasda
40	Dragonice	mitica
41	Dragonice	mititca2\n
42	Dragonice	vvv
44	Rivers of Blood	great
45	Rivers of Blood	die for it
46	Loretta's Mastery	huuuuuuuuuuuuge bow
47	Maliketh's Black Blade	blaaaack swooord
48	BLAIDD'S SET	great armor set
\.


--
-- Data for Name: granter; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.granter (id, description) FROM stdin;
The Greater Will	TBD
Ancient Dragons	TBD
Gloam Eyed Queen	TBD
Stars	TBD
Nature	TBD
The Formless Mother	TBD
Ancient Cult of Dragons	TBD
Crucible Knights	TBD
Golden Order	TBD
Gurranq, the beast clergyman	TBD
Fire God	TBD
The Three Fingers	TBD
\.


--
-- Data for Name: hammer; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.hammer (id, requirement_id, bonk_damage, image) FROM stdin;
Celebrant's Cleaver	1	125	\N
Icerind Hatchet	1	115	\N
Ripple Blade	1	75	\N
Rosus' Axe	1	112	\N
Great Omenkiller Cleaver	1	142	\N
Butchering Knife	1	134	\N
Winged Greathorn	1	130	\N
Axe of Godrick	1	142	\N
Rusted Anchor	1	147	\N
Warpick	1	108	\N
Varre's Bouquet	1	46	\N
Ringed Finger	1	121	\N
Marika's Hammer	1	101	\N
Scepter of the All-Knowing	1	99	\N
Monk's Flamemace	1	126	\N
Bastard's Stars	1	65	\N
Chainlink Flail	1	109	\N
Nightrider Flail	1	112	\N
Devourer's Scepter	1	112	\N
Great Stars	1	135	\N
Rotten Battle Hammer	1	126	\N
Battle Hammer	1	131	\N
Prelate's Inferno Crozier	1	156	\N
Staff of the Avatar	1	113	\N
Ghiza's Wheel	1	156	\N
Axe of Godfrey	1	165	\N
Rotten Greataxe	1	162	\N
\.


--
-- Data for Name: incantation; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.incantation (id, description, requirement_id, granter_id, image) FROM stdin;
Blessing's Boon	Grants blessing to self and nearby allies	1	The Greater Will	\N
Blessing of the Erdtree	Grants greater blessing to self and nearby allies	1	The Greater Will	\N
Bloodborn	Scatters bloodflame before caster to set area aflame.	1	The Formless Mother	\N
Bloodflame Talons	Creates bloodflame lacerations that then explode	1	The Formless Mother	\N
Borealis's Mist	Spews icy breath of Borealis from above	1	Ancient Cult of Dragons	\N
Burn, O Flame!	Raises a series of flame pillars around caster	1	Fire God	\N
Catch Flame	Momentarily sparks flame from hand	1	Fire God	\N
Discus of Light	Fires ring of light before the caster	1	Golden Order	\N
Divine Fortification	Increases holy damage negation	1	Golden Order	\N
Dragonclaw	Channels dragon to rend foes with dragon claws	1	Ancient Cult of Dragons	\N
Dragonfire	Channels dragon to spew flame breath	1	Ancient Cult of Dragons	\N
Dragonice	Channels dragon to spew icy breath	1	Ancient Cult of Dragons	\N
Dragonmaw	Channels dragon to bite foes before caster	1	Ancient Cult of Dragons	\N
Ekzykes's Decay	Spews scarlet rot breath of Ekzykes from above	1	Ancient Cult of Dragons	\N
Erdtree Heal	Vastly heals HP for self and nearby allies	1	The Greater Will	\N
Fire's Deadly Sin	Sets area and self ablaze with raging flames	1	Fire God	\N
Flame Fortification	Increases fire damage negation	1	Fire God	\N
Fortissax's Lightning Spear	Stabs from above with two red lightning spears in tandem	1	Ancient Cult of Dragons	\N
Frenzied Burst	Emits concentrated blast of yellow flame of frenzy from eyes	1	The Three Fingers	\N
Frozen Lightning Spear	Stabs with ice lightning spear from above	1	Ancient Cult of Dragons	\N
Glintstone Breath	Channels dragon to spew magic breath	1	Ancient Cult of Dragons	\N
Golden Lightning Fortification	Greatly increases lightning damage negation for self and allies	1	Golden Order	\N
Golden Vow	Greatly Heals HP for self and nearby allies	1	Golden Order	\N
Greyoll's Roar	Emits the roar of Elder Dragon Greyoll	1	Ancient Cult of Dragons	\N
Howl of Shabriri	Shrieks, building up madness in nearby foes	1	The Three Fingers	\N
Inescapable Frenzy	\tLatches onto foes to spread madness	1	The Three Fingers	\N
Law of Causality	Retaliates upon receiving a number of blows	1	Golden Order	\N
Law of Regression	Heals all ailments and dispels all special effects	1	Golden Order	\N
Magma Breath	Channels wyrm to spew magma breath	1	Ancient Cult of Dragons	\N
Scouring Black Flame	Sweeps area before caster with black flame	1	Gloam Eyed Queen	\N
Swarm of Flies	Releases a swarm of bloodflies before caster	1	The Formless Mother	\N
Theodorix's Magma	Spews magma breath of Theodorix from above	1	Ancient Cult of Dragons	\N
Beast Claw	Creates claws that tear through the land.	1	Gurranq, the beast clergyman	\N
Bestial Constitution	Alleviates blood loss and frost buildup	1	Gurranq, the beast clergyman	\N
Bestial Vitality	Heals HP over a period of time	1	Gurranq, the beast clergyman	\N
Black Flame	Throws a ball of raging black fire	1	Gloam Eyed Queen	\N
Black Flame Ritual	Summons circle of black flame pillars around caster.	1	Gloam Eyed Queen	\N
Ancient Dragons' Lightning Spear	Stabs with red lightning spear from above	1	Ancient Cult of Dragons	\N
Ancient Dragons' Lightning Strike	Summons red lightning that spreads from impact	1	Ancient Cult of Dragons	\N
Aspects of the Crucible: Breath	Creates throat pouch to spew fire while walking	1	Crucible Knights	\N
Aspects of the Crucible: Horns	Creates shoulder horn to gore foes form low stance	1	Crucible Knights	\N
Aspects of the Crucible: Tail	Creates supple tail to sweep area before caster	1	Crucible Knights	\N
\.


--
-- Data for Name: location; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.location (id, description) FROM stdin;
Altus Plateau	TBD
Liurnia of the Lakes	TBD
Limgrave	TBD
Weeping Peninsula	TBD
Mountaintops of the Giants	TBD
Consecrated Snowfield	TBD
Volcano Manor	TBD
Swamp of Aeonia	TBD
Nokron	TBD
Nokstella	TBD
Siofra River	TBD
Ainsel River	TBD
Lake of Rot	TBD
Crumbling Farum Azula	TBD
Leyndell	TBD
The Shaded Castle	TBD
Caria Manor	TBD
Raya Lucaria Academy	TBD
Moonlight Plateau	TBD
Caelid	TBD
Dragonbarrow	TBD
Redmane Castle	TBD
Miquella's Haligtree	TBD
Zamor Ruins	TBD
Chapel of Anticipation	TBD
Hallowhorn Grounds	TBD
Mohgwyn Dynasty Mausoleum	TBD
Siofra Aqueduct	TBD
Uhl Palace Ruins	TBD
Grand Cloister	TBD
Deeproot Depths	TBD
Leyndell Ashen Capital	TBD
Stormveil Castle	TBD
\.


--
-- Data for Name: magic; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.magic (id, description) FROM stdin;
glintstone	TBD
fire	TBD
natural	TBD
blackflame	TBD
frenzied flame	TBD
gravitational	TBD
holy	TBD
lightning	TBD
blood	TBD
dragons	TBD
death	TBD
faith	TBD
crystalian	TBD
\.


--
-- Data for Name: race; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.race (id, description, starting_vigor, starting_mind, starting_arcane, starting_intelligence, starting_strength, starting_endurance, starting_dexterity, starting_faith) FROM stdin;
Warrior	The most common face among the Tarnished. After all, they were all warriors once.	12	10	10	9	11	15	15	7
Samurai	A face from the faraway, isolated Land of Reeds, where blood is a familiar sight.	10	14	8	9	12	13	15	8
Prophet	The features of those known as Nightfolk. Few in number, they were said to bleed silver long ago.	10	14	10	7	11	8	10	16
Vagabond	The face of one who wanders the seas in search of their home in the Lands Between.	15	10	7	9	14	11	9	9
Confessor	A regal face found among those who claim noble blood in the Lands Between.	10	13	9	9	12	10	12	9
Prisoner	The face of an austere pilgrim. There are many roads to truth.	11	12	9	14	11	11	14	9
Bandit	The stony face of the people of the ancient dragons, among whom life is typically short.	10	11	14	9	9	10	13	14
Hero	A face found among the hardy people of the unforgiving north. Some say they're descended from giants.	14	9	11	7	16	12	9	8
Astrologer	Face found among a proud and seclusive tribe of folk well-versed in ancient legends and heresies alike.	9	15	9	16	8	9	12	7
Wretch	The face of the Numen, supposed descendants of denizens of another world. Long-lived but seldom born.	10	10	10	10	10	10	10	10
Omen	not playable	\N	\N	\N	\N	\N	\N	\N	\N
Monster	not playable	\N	\N	\N	\N	\N	\N	\N	\N
\.


--
-- Data for Name: requirement; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.requirement (id, vigor, mind, arcane, intelligence, strength, endurance, dexterity, faith) FROM stdin;
1	0	0	0	0	0	0	0	0
\.


--
-- Data for Name: sorcery; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.sorcery (id, description, requirement_id, magic_id, image) FROM stdin;
Ambush Shard	Strikes from behind with projectile fired from distance	1	dragons	\N
Briars of Punishment	Wounds caster to unleash trail of bloodthrorns	1	faith	\N
Briars of Sin	Summons thorns from a whorl of own blood	1	faith	\N
Cannon of Haima	Lobs an explosive magic projectile in an arc	1	glintstone	\N
Carian Greatsword	Performs sweeping slash using magical greatsword	1	glintstone	\N
Carian Piercer	Impales foes with magical greatsword	1	glintstone	\N
Carian Slicer	Performs swift sweeping slash using magical sword	1	glintstone	\N
Collapsing Stars	Pulls foes toward caster with gravity projectile volley	1	gravitational	\N
Comet Azur	Fires a tremendous comet within a starry torrent	1	glintstone	\N
Comet	Fires a great magic comet	1	glintstone	\N
Crystal Barrage	Fires a volley of glintstone crystal shards	1	glintstone	\N
Crystal Release	Scours area with violent rain of crystal shards	1	crystalian	\N
Crystal Torrent	Creates crystal mass that fires stream of crystal shards	1	crystalian	\N
Founding Rain of Stars	Releases a downpour of star rain for a while	1	glintstone	\N
Freezing Mist	Releases cold mist before caster	1	natural	\N
Explosive Ghostflame	Causes ghostflame explosion that burns wide area	1	blackflame	\N
Gelmir's Fury	Covers area with surge of magma from the earth	1	fire	\N
Glintblade Phalanx	Forms a defensive arch of larger magic glintblades	1	glintstone	\N
Loretta's Mastery	Fires four great arrow from a magic greatbow at once	1	glintstone	\N
Magic Glintblade	Creates sigil that forms a projectile glintblade after delay	1	glintstone	\N
Magma Shot	Fires lump of magma that explodes on contact	1	fire	\N
Meteorite of Astel	Calls a hail of small meteorites from the void.	1	gravitational	\N
Rancorcall	Summons vengeful spirits that chase down foes	1	death	\N
Rennalla's Full Moon	Incarnate a full moon and launch it at foes	1	glintstone	\N
Rock Blaster	Thrust staff into ground to emit a massive shockwave	1	glintstone	\N
Roiling Magma	Fires lump of magma that explodes after delay	1	fire	\N
Rykard's Rancor	Releases searing spirits that repeatedly explode after delay	1	fire	\N
Shattering Crystal	Creates crystal mass that shatters in forward burst	1	crystalian	\N
Zamor Ice Storm	Thrust staff into ground to create freezing tornado	1	natural	\N
Gravity Well	Pulls foes toward caster with gravity projectile	1	gravitational	\N
Unseen Form	Makes the caster semi-invisible	1	natural	\N
Gavel of Haima	Attacks using a magic greathammer	1	glintstone	\N
\.


--
-- Data for Name: spear; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.spear (id, requirement_id, heavy_thrust_damage, image) FROM stdin;
Partisan	1	123	\N
Cross-Naginata	1	122	\N
Inquisitor's Girandole	1	102	\N
Bolt of Gransax	1	98	\N
Death Ritual Spear	1	99	\N
Rotten Crystal Spear	1	104	\N
Serpent-Hunter	1	111	\N
Siluria's Tree	1	90	\N
Mohgwyn's Sacred Spear	1	103	\N
Vyke's War Spear	1	103	\N
Treespear	1	122	\N
Eleonora's Poleblade	1	72	\N
Gargoyle's Black Blades	1	81	\N
Godskin Peeler	1	121	\N
Twinblade	1	119	\N
Loretta's War Sickle	1	110	\N
\.


--
-- Data for Name: spell; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.spell (id, description, requirement_id, image) FROM stdin;
no spells	\N	1	\N
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.staff (id, requirement_id, image, magic_damage) FROM stdin;
Lusat's Glintstone Staff	1	\N	413
Carian Glintstone Staff	1	\N	329
Azur's Glintstone Staff	1	\N	362
Carian Regal Scepter	1	\N	373
Rotten Crystal Staff	1	\N	367
Prince of Death's Staff	1	\N	430
Gelmir Glintstone Staff	1	\N	318
\.


--
-- Data for Name: sword; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.sword (id, requirement_id, slash_damage, thrust_damage, image) FROM stdin;
Regalia of Eochaid	1	89	48	\N
Sword of Night and Flame	1	87	36	\N
Sword of St Trina	1	107	39	\N
Maliketh's Black Blade	1	127	68	\N
Godslayer's Greatsword	1	119	63	\N
Starscourge Greatsword	1	129	65	\N
Blasphemous Blade	1	121	72	\N
Sacred Relic Sword	1	118	62	\N
Morgott's Cursed Sword	1	120	55	\N
Magma Wyrm's Scalesword	1	114	66	\N
Uchigatana	1	115	45	\N
Rivers of Blood	1	76	36	\N
Hand of Malenia	1	117	49	\N
Nagakiba	1	115	49	\N
Wing of Astel	1	65	28	\N
Falchion	1	109	42	\N
Godskin Stitcher	1	127	55	\N
Bloody Helice	1	121	57	\N
Dragon King's Cragblade	1	92	46	\N
Black Knife	1	66	26	\N
Marais Executioner's Sword	1	94	68	\N
Zamor Curved Sword	1	125	61	\N
Ordovis's Greatsword	1	107	69	\N
Onyx Lord's Greatsword	1	118	57	\N
Banished Knight's Greatsword	1	142	68	\N
\.


--
-- Data for Name: weapon; Type: TABLE DATA; Schema: public; Owner: my_user
--

COPY public.weapon (id, requirement_id, image) FROM stdin;
no weapon	1	\N
Baton	1	\N
\.


--
-- Name: comments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: my_user
--

SELECT pg_catalog.setval('public.comments_id_seq', 48, true);


--
-- Name: requirement_id_seq; Type: SEQUENCE SET; Schema: public; Owner: my_user
--

SELECT pg_catalog.setval('public.requirement_id_seq', 1, true);


--
-- Name: armor armor_pkey; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.armor
    ADD CONSTRAINT armor_pkey PRIMARY KEY (id);


--
-- Name: boss boss_pkey; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.boss
    ADD CONSTRAINT boss_pkey PRIMARY KEY (id);


--
-- Name: character character_pkey; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public."character"
    ADD CONSTRAINT character_pkey PRIMARY KEY (id);


--
-- Name: granter granter_pkey; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.granter
    ADD CONSTRAINT granter_pkey PRIMARY KEY (id);


--
-- Name: hammer hammer_pk; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.hammer
    ADD CONSTRAINT hammer_pk PRIMARY KEY (id);


--
-- Name: incantation incantation_pk; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.incantation
    ADD CONSTRAINT incantation_pk PRIMARY KEY (id);


--
-- Name: location location_pkey; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.location
    ADD CONSTRAINT location_pkey PRIMARY KEY (id);


--
-- Name: magic magic_pkey; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.magic
    ADD CONSTRAINT magic_pkey PRIMARY KEY (id);


--
-- Name: race race_pkey; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.race
    ADD CONSTRAINT race_pkey PRIMARY KEY (id);


--
-- Name: requirement requirement_pkey; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.requirement
    ADD CONSTRAINT requirement_pkey PRIMARY KEY (id);


--
-- Name: sorcery sorcery_pk; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.sorcery
    ADD CONSTRAINT sorcery_pk PRIMARY KEY (id);


--
-- Name: spear spear_pk; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.spear
    ADD CONSTRAINT spear_pk PRIMARY KEY (id);


--
-- Name: spell spell_pkey; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.spell
    ADD CONSTRAINT spell_pkey PRIMARY KEY (id);


--
-- Name: staff staff_pk; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.staff
    ADD CONSTRAINT staff_pk PRIMARY KEY (id);


--
-- Name: sword sword_pk; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.sword
    ADD CONSTRAINT sword_pk PRIMARY KEY (id);


--
-- Name: weapon weapon_pkey; Type: CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.weapon
    ADD CONSTRAINT weapon_pkey PRIMARY KEY (id);


--
-- Name: comments checkcommentid; Type: TRIGGER; Schema: public; Owner: my_user
--

CREATE TRIGGER checkcommentid BEFORE INSERT ON public.comments FOR EACH ROW EXECUTE FUNCTION public.check_comment_id();


--
-- Name: character fk_armor; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public."character"
    ADD CONSTRAINT fk_armor FOREIGN KEY (armor_id) REFERENCES public.armor(id);


--
-- Name: boss fk_armor; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.boss
    ADD CONSTRAINT fk_armor FOREIGN KEY (armor_id) REFERENCES public.armor(id);


--
-- Name: incantation fk_granter; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.incantation
    ADD CONSTRAINT fk_granter FOREIGN KEY (granter_id) REFERENCES public.granter(id);


--
-- Name: boss fk_hammer; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.boss
    ADD CONSTRAINT fk_hammer FOREIGN KEY (hammer_id) REFERENCES public.hammer(id);


--
-- Name: character fk_hammer; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public."character"
    ADD CONSTRAINT fk_hammer FOREIGN KEY (hammer_id) REFERENCES public.hammer(id);


--
-- Name: boss fk_location; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.boss
    ADD CONSTRAINT fk_location FOREIGN KEY (location_id) REFERENCES public.location(id);


--
-- Name: sorcery fk_magic; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.sorcery
    ADD CONSTRAINT fk_magic FOREIGN KEY (magic_id) REFERENCES public.magic(id);


--
-- Name: character fk_race; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public."character"
    ADD CONSTRAINT fk_race FOREIGN KEY (race_id) REFERENCES public.race(id);


--
-- Name: boss fk_race; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.boss
    ADD CONSTRAINT fk_race FOREIGN KEY (race_id) REFERENCES public.race(id);


--
-- Name: weapon fk_requirement; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.weapon
    ADD CONSTRAINT fk_requirement FOREIGN KEY (requirement_id) REFERENCES public.requirement(id);


--
-- Name: armor fk_requirement; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.armor
    ADD CONSTRAINT fk_requirement FOREIGN KEY (requirement_id) REFERENCES public.requirement(id);


--
-- Name: spell fk_requirement; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.spell
    ADD CONSTRAINT fk_requirement FOREIGN KEY (requirement_id) REFERENCES public.requirement(id);


--
-- Name: boss fk_spear; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.boss
    ADD CONSTRAINT fk_spear FOREIGN KEY (spear_id) REFERENCES public.spear(id);


--
-- Name: character fk_spear; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public."character"
    ADD CONSTRAINT fk_spear FOREIGN KEY (spear_id) REFERENCES public.spear(id);


--
-- Name: boss fk_staff; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.boss
    ADD CONSTRAINT fk_staff FOREIGN KEY (staff_id) REFERENCES public.staff(id);


--
-- Name: character fk_staff; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public."character"
    ADD CONSTRAINT fk_staff FOREIGN KEY (staff_id) REFERENCES public.staff(id);


--
-- Name: boss fk_sword; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.boss
    ADD CONSTRAINT fk_sword FOREIGN KEY (sword_id) REFERENCES public.sword(id);


--
-- Name: character fk_sword; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public."character"
    ADD CONSTRAINT fk_sword FOREIGN KEY (sword_id) REFERENCES public.sword(id);


--
-- Name: boss fk_weapon; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public.boss
    ADD CONSTRAINT fk_weapon FOREIGN KEY (weapon_id) REFERENCES public.weapon(id);


--
-- Name: character fk_weapon; Type: FK CONSTRAINT; Schema: public; Owner: my_user
--

ALTER TABLE ONLY public."character"
    ADD CONSTRAINT fk_weapon FOREIGN KEY (weapon_id) REFERENCES public.weapon(id);


--
-- Name: FUNCTION pg_read_binary_file(text); Type: ACL; Schema: pg_catalog; Owner: postgres
--

GRANT ALL ON FUNCTION pg_catalog.pg_read_binary_file(text) TO my_user;


--
-- PostgreSQL database dump complete
--

